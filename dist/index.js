// @bun
import{OAuth2RequestError as oN,ArcticFetchError as sN}from"arctic";import{Elysia as aN}from"elysia";import{generateState as RN,generateCodeVerifier as bN}from"arctic";import{Elysia as kN}from"elysia";import{AmazonCognito as l,AniList as u,Apple as c,Atlassian as d,Auth0 as t,Authentik as o,Bitbucket as s,Box as a,Coinbase as i,Discord as e,Dribbble as r,Dropbox as NN,Facebook as EN,Figma as IN,Intuit as SN,GitHub as UN,GitLab as mN,Google as MN,Kakao as TN,KeyCloak as wN,Lichess as xN,Line as DN,Linear as ON,LinkedIn as $N,MicrosoftEntraId as AN,MyAnimeList as LN,Notion as HN,Okta as CN,Osu as JN,Patreon as QN,Reddit as XN,Roblox as YN,Salesforce as jN,Shikimori as FN,Slack as WN,Spotify as ZN,Strava as qN,Tiltify as BN,Tumblr as nN,Twitch as GN,Twitter as VN,VK as KN,WorkOS as gN,Yahoo as pN,Yandex as zN,Zoom as PN,FortyTwo as fN}from"arctic";var Z={AmazonCognito:l,AniList:u,Apple:c,Atlassian:d,Auth0:t,Authentik:o,Bitbucket:s,Box:a,Coinbase:i,Discord:e,Dribbble:r,Dropbox:NN,Facebook:EN,Figma:IN,FortyTwo:fN,GitHub:UN,GitLab:mN,Google:MN,Intuit:SN,Kakao:TN,KeyCloak:wN,Lichess:xN,Line:DN,Linear:ON,LinkedIn:$N,MicrosoftEntraId:AN,MyAnimeList:LN,Notion:HN,Okta:CN,Osu:JN,Patreon:QN,Reddit:XN,Roblox:YN,Salesforce:jN,Shikimori:FN,Slack:WN,Spotify:ZN,Strava:qN,Tiltify:BN,Tumblr:nN,Twitch:GN,Twitter:VN,VK:KN,WorkOS:gN,Yahoo:pN,Yandex:zN,Zoom:PN},K=Object.keys(Z).reduce((N,m)=>{return N[m.toLowerCase()]=m,N},{});var B=(N)=>("refreshAccessToken"in N)&&typeof N.refreshAccessToken==="function",g=(N)=>("revokeAccessToken"in N)&&typeof N.revokeAccessToken==="function",Y=(N)=>Object.keys(Z).map((m)=>m.toLowerCase()).includes(N.toLowerCase()),p=(N)=>!0,z=(N)=>N!==null&&N!==void 0&&N.trim()!=="";var P=86400000;var q=1800;var f=({clientProviders:N,authorizeRoute:m="authorize",onAuthorize:I})=>new kN().get(`/${m}/:provider`,({error:E,redirect:S,cookie:{state:U,code_verifier:x,auth_provider:M,redirect_url:T},params:{provider:D},headers:A})=>{if(D===void 0)return E("Bad Request","Provider is required");if(!Y(D))return E("Bad Request","Invalid provider");try{let O=D.toLowerCase(),{providerInstance:X,scopes:L,searchParams:$}=N[O],w=A.referer??"/";T.set({httpOnly:!0,maxAge:q,path:"/",sameSite:"lax",secure:!0,value:w}),M.set({httpOnly:!0,maxAge:q,path:"/",sameSite:"lax",secure:!0,value:D});let H=RN();U.set({httpOnly:!0,maxAge:q,path:"/",sameSite:"lax",secure:!0,value:H});let C=X.createAuthorizationURL.toString().includes("codeVerifier"),J=C?bN():void 0;C&&x.set({httpOnly:!0,maxAge:q,path:"/",sameSite:"lax",secure:!0,value:J??""});let Q=C?X.createAuthorizationURL(H,J,L):X.createAuthorizationURL(H,L);return $.forEach(([j,W])=>{Q.searchParams.set(j,W)}),I?.(),S(Q.toString())}catch(O){if(O instanceof Error)return E("Internal Server Error",`${O.message} - ${O.stack??""}`);return E("Internal Server Error",`Unknown error: ${O}`)}});import{decodeIdToken as vN}from"arctic";import{Elysia as hN}from"elysia";import{Elysia as yN}from"elysia";var F=()=>{let N={};return new yN({name:"sessionStore"}).state({session:N})};async function R(N,m){let I=_N[N];if(!I)throw new Error(`Unknown provider: ${N}`);let E=I.endpoint,S=I.method??"GET",U={};if(I.headers)Object.assign(U,I.headers);if(I.authIn==="header")U.Authorization=`Bearer ${m}`;else{let T=I.tokenParam??"access_token",D=E.includes("?")?"&":"?";E=`${E}${D}${T}=${encodeURIComponent(m)}`}let x={method:S,headers:U};if(S==="POST"&&I.body)U["Content-Type"]="application/json",x.body=JSON.stringify(I.body);let M=await fetch(E,x);if(!M.ok){let T=await M.text();throw new Error(`Failed to fetch ${N} profile: ${M.status} ${T}`)}return M.json()}var _N={facebook:{endpoint:"https://graph.facebook.com/me?fields=id,name,picture,email",method:"GET",authIn:"query",tokenParam:"access_token"},anilist:{endpoint:"https://graphql.anilist.co",method:"POST",authIn:"header",headers:{"Content-Type":"application/json",Accept:"application/json"},body:{query:"query { Viewer { id name } }"}},atlassian:{endpoint:"https://api.atlassian.com/me",method:"GET",authIn:"header"},battlenet:{endpoint:"https://oauth.battle.net/userinfo",method:"GET",authIn:"header"},bitbucket:{endpoint:"https://api.bitbucket.org/2.0/user",method:"GET",authIn:"header"},box:{endpoint:"https://api.box.com/2.0/users/me",method:"GET",authIn:"header"},bungie:{endpoint:"https://www.bungie.net/Platform/User/GetCurrentBungieNetUser",method:"GET",authIn:"header",headers:{"X-API-Key":"<YOUR_API_KEY>"}},coinbase:{endpoint:"https://api.coinbase.com/v2/user",method:"GET",authIn:"header"},discord:{endpoint:"https://discord.com/api/users/@me",method:"GET",authIn:"header"},donationAlerts:{endpoint:"https://www.donationalerts.com/api/v1/user",method:"GET",authIn:"header"},dribbble:{endpoint:"https://api.dribbble.com/v2/user",method:"GET",authIn:"header"},dropbox:{endpoint:"https://api.dropboxapi.com/2/users/get_current_account",method:"GET",authIn:"header"},epicGames:{endpoint:"https://api.epicgames.dev/epic/oauth/v2/userInfo",method:"GET",authIn:"header"},etsy:{endpoint:"https://openapi.etsy.com/v3/application/users/me",method:"GET",authIn:"header"},figma:{endpoint:"https://api.figma.com/v1/me",method:"GET",authIn:"header"},gitea:{endpoint:"https://<YOUR_GITEA_DOMAIN>/api/v1/user",method:"GET",authIn:"header"},github:{endpoint:"https://api.github.com/user",method:"GET",authIn:"header"},gitlab:{endpoint:"https://gitlab.com/api/v4/user",method:"GET",authIn:"header"},intuit:{endpoint:"https://oauth.platform.intuit.com/oauth2/v1/userinfo",method:"GET",authIn:"header"},kakao:{endpoint:"https://kapi.kakao.com/v2/user/me",method:"GET",authIn:"header"},kick:{endpoint:"https://api.kick.com/v1/user",method:"GET",authIn:"header"},lichess:{endpoint:"https://lichess.org/api/account",method:"GET",authIn:"header"},line:{endpoint:"https://api.line.me/v2/profile",method:"GET",authIn:"header"},linear:{endpoint:"https://api.linear.app/graphql",method:"POST",authIn:"header",headers:{"Content-Type":"application/json",Accept:"application/json"},body:{query:"query { viewer { id name } }"}},mastodon:{endpoint:"https://<YOUR_INSTANCE>/api/v1/accounts/verify_credentials",method:"GET",authIn:"header"},mercadoLibre:{endpoint:"https://api.mercadolibre.com/users/me",method:"GET",authIn:"header"},mercadoPago:{endpoint:"https://api.mercadopago.com/v1/users/me",method:"GET",authIn:"header"},myAnimeList:{endpoint:"https://api.myanimelist.net/v2/users/@me",method:"GET",authIn:"header"},naver:{endpoint:"https://openapi.naver.com/v1/nid/me",method:"GET",authIn:"header"},notion:{endpoint:"https://api.notion.com/v1/users/me",method:"GET",authIn:"header"},osu:{endpoint:"https://osu.ppy.sh/api/v2/me",method:"GET",authIn:"header"},patreon:{endpoint:"https://www.patreon.com/api/oauth2/v2/identity",method:"GET",authIn:"header"},polar:{endpoint:"https://www.polaraccesslink.com/v3/users/<USER_ID>",method:"GET",authIn:"header"},reddit:{endpoint:"https://oauth.reddit.com/api/v1/me",method:"GET",authIn:"header"},roblox:{endpoint:"https://apis.roblox.com/oauth/v1/userinfo",method:"GET",authIn:"header"},shikimori:{endpoint:"https://shikimori.one/api/users/whoami",method:"GET",authIn:"header"},slack:{endpoint:"https://slack.com/api/users.identity",method:"GET",authIn:"query",tokenParam:"token"},spotify:{endpoint:"https://api.spotify.com/v1/me",method:"GET",authIn:"header"},startGg:{endpoint:"https://api.start.gg/gql/alpha",method:"POST",authIn:"header",headers:{"Content-Type":"application/json",Accept:"application/json"},body:{query:"query { currentUser { id slug email player { gamerTag } } }"}},strava:{endpoint:"https://www.strava.com/api/v3/athlete",method:"GET",authIn:"header"},synology:{endpoint:"https://<YOUR_DOMAIN>/webman/sso/SSOUserInfo.cgi",method:"GET",authIn:"header"},tiktok:{endpoint:"https://open.douyin.com/oauth/userinfo",method:"GET",authIn:"query",tokenParam:"access_token"},tiltify:{endpoint:"https://tiltify.com/api/v3/me",method:"GET",authIn:"header"},tumblr:{endpoint:"https://api.tumblr.com/v2/user/info",method:"GET",authIn:"header"},twitch:{endpoint:"https://api.twitch.tv/helix/users",method:"GET",authIn:"header"},twitter:{endpoint:"https://api.twitter.com/2/users/me",method:"GET",authIn:"header"},vk:{endpoint:"https://api.vk.com/method/users.get",method:"GET",authIn:"query",tokenParam:"access_token"},zoom:{endpoint:"https://api.zoom.us/v2/users/me",method:"GET",authIn:"header"}};var b=({clientProviders:N,callbackRoute:m="authorize/callback",onCallback:I})=>new hN().use(F()).get(`/${m}`,async({error:E,redirect:S,store:{session:U},cookie:{state:x,code_verifier:M,redirect_url:T,user_session_id:D,auth_provider:A},query:{code:O,state:X}})=>{if(!z(O)||x.value===void 0)return E("Bad Request","Invalid callback request");if(X!==x.value)return E("Bad Request","Invalid state mismatch");if(A.value===void 0)return E("Unauthorized","No auth provider found");if(!Y(A.value))return E("Unauthorized","Invalid provider");let L=A.value.toLowerCase(),{providerInstance:$}=N[L];try{x.remove();let w=$.validateAuthorizationCode.toString().includes("codeVerifier"),H=M.value;if(w&&H===void 0)return E("Bad Request","Code verifier not found and is required");let C=H??"",J=await(w?$.validateAuthorizationCode(O,C):$.validateAuthorizationCode(O));if(w)M.remove();let Q,j=A.value;try{Q=Object.fromEntries(Object.entries(vN(J.idToken())).map(([G,V])=>[G,typeof V==="string"?V:void 0]))}catch(n){Q=await R(j,J.accessToken())}await I?.({authProvider:j,userProfile:Q,session:U,user_session_id:D});let W=T.value??"/";return S(W)}catch(w){if(w instanceof Error)return E("Internal Server Error",`${w.message} - ${w.stack??""}`);return E("Internal Server Error",`Failed to validate authorization code: Unknown error: ${w}`)}});import{Elysia as lN}from"elysia";var k=({logoutRoute:N="logout",onLogout:m})=>new lN().post(`/${N}`,async({error:I,cookie:{user_session_id:E,auth_provider:S}})=>{if(S.value===void 0)return I("Unauthorized","No auth provider found");try{return m?.(),E.remove(),S.remove(),new Response("Succesfuly Logged Out",{status:204})}catch(U){if(U instanceof Error)return I("Internal Server Error",`Failed to logout: ${U.message}`);return I("Internal Server Error",`Failed to logout: Unknown error: ${U}`)}});import{Elysia as uN}from"elysia";var y=()=>new uN().use(F()).derive(({store:{session:N},cookie:{user_session_id:m},error:I})=>({protectRoute:async(E,S)=>{if(m.value===void 0)return S?.()??I("Unauthorized","No session ID found");if(N[m.value]===void 0)return S?.()??I("Unauthorized","No session found");return E()}})).as("plugin");import{Elysia as cN}from"elysia";var _=({clientProviders:N,refreshRoute:m="refresh",onRefresh:I})=>new cN().post(`/${m}`,async({error:E,cookie:{user_refresh_token:S,auth_provider:U}})=>{if(S.value===void 0)return E("Unauthorized","No refresh token found");if(U.value===void 0)return E("Unauthorized","No auth provider found");let x=U.value.toLowerCase(),{providerInstance:M}=N[x];if(!B(M))return E("Not Implemented","Provider is not refreshable");try{return await M.refreshAccessToken(S.value),I?.(),new Response("Token refreshed",{status:204})}catch(T){if(T instanceof Error)return E("Internal Server Error",`Failed to refresh token: ${T.message}`);return E("Internal Server Error",`Faile to refresh token: Unknown error: ${T}`)}});import{Elysia as dN}from"elysia";var v=({clientProviders:N,revokeRoute:m="revoke",onRevoke:I})=>new dN().post(`/${m}/access-token`,async({error:E,cookie:{user_refresh_token:S,auth_provider:U}})=>{if(S.value===void 0)return E("Unauthorized","No refresh token found");if(U.value===void 0)return E("Unauthorized","No auth provider found");let x=U.value.toLowerCase(),{providerInstance:M}=N[x];if(!g(M))return E("Not Implemented","Provider does not support revocation");try{return await M.revokeAccessToken(S.value),I?.(),new Response("Token revoked",{status:204})}catch(T){if(T instanceof Error)return E("Internal Server Error",`Failed to revoke token: ${T.message}`);return E("Internal Server Error",`Failed to revoke token: Unknown error: ${T}`)}});import{Elysia as tN}from"elysia";var h=({clientProviders:N,statusRoute:m="auth-status",onStatus:I})=>new tN().use(F()).get(`/${m}`,async({error:E,cookie:{user_session_id:S,auth_provider:U},store:{session:x}})=>{try{if(S.value===void 0)return new Response(JSON.stringify({isLoggedIn:!1,user:null}),{headers:{"Content-Type":"application/json"}});if(U.value===void 0)return new Response(JSON.stringify({isLoggedIn:!1,user:null}),{headers:{"Content-Type":"application/json"}});let M=U.value.toLowerCase(),{providerInstance:T}=N[M];if(!B(T))return E("Not Implemented","Provider is not refreshable");let D=x[S.value];if(D===void 0)return new Response(JSON.stringify({isLoggedIn:!1,user:null}),{headers:{"Content-Type":"application/json"}});let{user:A}=D;return I?.(),new Response(JSON.stringify({isLoggedIn:!0,user:A}),{headers:{"Content-Type":"application/json"}})}catch(M){if(M instanceof Error)return E("Internal Server Error",`Error: ${M.message} - ${M.stack??""}`);return E("Internal Server Error",`Unknown Error: ${M}`)}});var zE=async({user_session_id:N,session:m,getUser:I,createUser:E})=>{let S=await I();if(S=S??await E(),!p(S))throw new Error("Internal Server Error - Invalid user schema");let U=crypto.randomUUID();m[U]={expiresAt:Date.now()+P,user:S},N.set({httpOnly:!0,sameSite:"lax",secure:!0,value:U})},PE=(N)=>N;var tE=({config:N,authorizeRoute:m,callbackRoute:I,logoutRoute:E,statusRoute:S,refreshRoute:U,revokeRoute:x,onAuthorize:M,onCallback:T,onStatus:D,onRefresh:A,onLogout:O,onRevoke:X})=>{let L=Object.keys(N).reduce(($,w)=>{if(!Object.prototype.hasOwnProperty.call(N,w))return $;if(!Y(w))return console.error(`Provider ${w} is not supported`),$;let H=N[w];if(!H)return $;let C=w.toLowerCase(),J=K[C];if(!Y(J))return console.error(`Provider ${w} is not supported`),$;let Q=Z[J],{credentials:j,scopes:W=[],searchParams:n=[]}=H,G=new Q(...j);return $[C]={providerInstance:G,scopes:W,searchParams:n},$},{});return new aN().error("OAUTH2_REQUEST_ERROR",oN).error("ARCTIC_FETCH_ERROR",sN).use(k({logoutRoute:E,onLogout:O})).use(v({clientProviders:L,onRevoke:X,revokeRoute:x})).use(h({clientProviders:L,onStatus:D,statusRoute:S})).use(_({clientProviders:L,onRefresh:A,refreshRoute:U})).use(f({authorizeRoute:m,clientProviders:L,onAuthorize:M})).use(b({callbackRoute:I,clientProviders:L,onCallback:T})).use(y()).as("plugin")};export{zE as instantiateUserSession,PE as createAuthConfig,tE as absoluteAuth};
